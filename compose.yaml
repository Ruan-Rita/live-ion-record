services:
  server_api:
    build: backend/.
    container_name: 'SERVER_API'
    ports:
      - '3001:3001'
    environment:
      NODE_ENV: 'production'
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      DB_TEST_HOST: ${DB_TEST_HOST}
      DB_TEST_PORT: ${DB_TEST_PORT}
      DB_TEST_USERNAME: ${DB_TEST_USERNAME}
      DB_TEST_PASSWORD: ${DB_TEST_PASSWORD}
      DB_TEST_DATABASE: ${DB_TEST_DATABASE}
      APP_PORT: ${APP_PORT}
      APP_URL: ${APP_URL}
      JWT_SECRET: ${JWT_SECRET}
      JWT_PRIVATE_KEY: ${JWT_PRIVATE_KEY}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
      STORAGE_DRIVER: ${STORAGE_DRIVER}
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY}
      AWS_REGION: ${AWS_REGION}
      AWS_BUCKET_NAME: ${AWS_BUCKET_NAME}
    volumes:
      # - ./backend:/app
      - ./backend/uploads:/app/uploads
      - /app/node_modules
    networks:
      - app-network

  db_app:
    image: postgres:17
    container_name: DATABASE
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
    volumes:
      - database_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  db_test:
    image: postgres:17
    container_name: DATABASE_TEST
    environment:
      POSTGRES_USER: ${DB_TEST_USERNAME}
      POSTGRES_PASSWORD: ${DB_TEST_PASSWORD}
      POSTGRES_DB: ${DB_TEST_DATABASE}
    volumes:
      - database_test_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    networks:
      - app-network
    
  # website:
  #   build: website/.
  #   container_name: 'WEB_SITE'
  #   ports:
  #     - '3000:3000'
  #   environment:
  #     NODE_ENV: 'production'
  #   volumes:
  #     - ./website:/app

volumes:
  database_data:
  database_test_data:

networks:
  app-network:
    driver: bridge
